<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<!-- List Label Vars -->
 	<variable name="List_Var">
		<value condition="ListItem.IsParentFolder"> • BACK • </value>
		<value condition="![String.IsEmpty(ListItem.Title) | Container.Content(episodes) | ListItem.IsParentFolder]">$INFO[ListItem.Title]</value>
		<value condition="!ListItem.IsParentFolder">$INFO[ListItem.Label]</value>
		<value>$INFO[ListItem.Label2]</value>
	</variable>

	<variable name="Addon_InfoLine">
		<value condition="!ListItem.IsParentFolder">$INFO[ListItem.AddonVersion,[COLOR=selected]Addon Version:[/COLOR][CR]  ][CR][CR]$INFO[ListItem.AddonType,[COLOR=selected]Addon Type:[/COLOR][CR]  ][CR][CR]$INFO[ListItem.AddonSummary,[COLOR=selected]Addon Summary:[/COLOR][CR]  ]</value>
	</variable>

   <variable name="Label_InfoLine">
        <value condition="![Container.Content(seasons) | ListItem.IsParentFolder]">$VAR[Label_Premiered] • $VAR[Label_Duration]</value>
        <value condition="!ListItem.IsParentFolder">$VAR[Label_Duration] •</value>
    </variable>

    <variable name="Label_MPAA">
        <value condition="![String.IsEmpty(ListItem.MPAA) | ListItem.IsParentFolder]">$INFO[ListItem.MPAA]</value>
    </variable>

    <variable name="Label_Premiered">
        <value condition="!String.IsEmpty(ListItem.Premiered)">$INFO[ListItem.Premiered]</value>
        <value condition="String.IsEmpty(ListItem.Premiered)">$INFO[ListItem.Year]</value>
    </variable>

    <variable name="Label_Duration">
        <value condition="Integer.IsGreater(ListItem.Duration(hh),00) + !String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration(hh),,h] $INFO[ListItem.Duration(mm),,min]</value>
        <value condition="!Integer.IsGreater(ListItem.Duration(hh),00) + !String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration(mm),,min]</value>
    </variable>

    <variable name="Label_Genre">
        <value condition="!String.IsEmpty(ListItem.Genre)">$INFO[ListItem.Genre]</value>
    </variable>

    <variable name="Icon_MPAA">
        <value condition="!String.IsEmpty(ListItem.MPAA)">$INFO[ListItem.MPAA,flags/mpaa/info/,.png]</value>
    </variable>

	<variable name="Image_Var">
		<value condition="ListItem.IsParentFolder">defaultfolderbackp.png</value>
		<value condition="String.Contains(ListItem.Label,Next Page)">next.png</value>
		<value condition="!String.IsEmpty(ListItem.ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>

	<variable name="Panel_Var">
		<value condition="ListItem.IsParentFolder">defaultfolderbackls.png</value>
		<value condition="String.Contains(ListItem.Label,Next Page)">nextls.png</value>
		<value condition="![Window.IsActive(addonbrowser) | Container.Content(episodes) + String.IsEmpty(ListItem.ListItem.Art(fanart))]">$INFO[ListItem.Art(fanart)]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>

	<variable name="Banner_Var">
		<value condition="ListItem.IsParentFolder">bannerback.png</value>
		<value condition="String.Contains(ListItem.Label,Next Page)">bannernext.png</value>
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
	</variable>

	<variable name="Studio">
		<value>resource://resource.images.studios.coloured/$INFO[ListItem.Studio].png</value>
	</variable>

	<variable name="StudioFlagColorVar">
		<value condition="Window.IsActive(fullscreeninfo)">grey2</value>
		<value>white</value>
	</variable>

	<variable name="Title_Var">
		<value condition="VideoPlayer.Content(episodes)">$INFO[VideoPlayer.TVShowTitle]</value>
		<value>$INFO[VideoPlayer.Title]</value>
		<value condition="!String.IsEmpty(Player.SeekOffset)">$INFO[Player.SeekOffset,$LOCALIZE[31046]]</value>
		<value condition="Player.Caching + !Player.Seeking">$INFO[Player.CacheLevel,$LOCALIZE[15107] ,%]</value>
	</variable>

	<variable name="Info_Var">
		<value condition="!String.IsEmpty(ListItem.TVShowTitle)">$INFO[ListItem.TVShowTitle]</value>
		<value>$INFO[ListItem.Title]</value>
	</variable>

	<variable name="VideoPlayerForwardRewindVar">
		<value condition="Player.Forwarding2x | Player.Rewinding2x">2x</value>
		<value condition="Player.Forwarding4x | Player.Rewinding4x">4x</value>
		<value condition="Player.Forwarding8x | Player.Rewinding8x">8x</value>
		<value condition="Player.Forwarding16x | Player.Rewinding16x">16x</value>
		<value condition="Player.Forwarding32x | Player.Rewinding32x">32x</value>
	</variable>
	
	<variable name="SeekLabel">
		<value condition="!String.IsEmpty(Player.SeekStepSize)">$LOCALIZE[773][COLOR=grey] $INFO[Player.SeekStepSize][/COLOR]</value>
		<value condition="Player.Paused">$LOCALIZE[112]</value>
		<value condition="Player.Forwarding">$LOCALIZE[31039] $VAR[VideoPlayerForwardRewindVar]</value>
		<value condition="Player.Rewinding">$LOCALIZE[31038] $VAR[VideoPlayerForwardRewindVar]</value>
		<value condition="Player.IsTempo">$LOCALIZE[31142]: $INFO[Player.PlaySpeed]</value>
	</variable>

</includes>